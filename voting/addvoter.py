# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'addvoter.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
from mysql.connector import Error
import pyttsx3
engine = pyttsx3.init()
engine.setProperty("rate",125)
import embeddings

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(825, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(300, 20, 241, 41))
        self.label.setStyleSheet("font: 75 20pt \"MS Shell Dlg 2\";\n"
"color: rgb(170, 0, 0);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(190, 160, 111, 31))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(190, 220, 111, 31))
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(300, 160, 191, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(300, 220, 191, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(300, 290, 131, 51))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 825, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "ADD VOTER"))
        self.label_2.setText(_translate("MainWindow", "VOTER ID"))
        self.label_3.setText(_translate("MainWindow", "ADHAR ID"))
        self.pushButton.setText(_translate("MainWindow", "REGISTER FACE"))
        self.pushButton.clicked.connect(self.savevoter)
    def savevoter(self):
        voterid = self.lineEdit.text()
        adharid = self.lineEdit_2.text()
        print(voterid,adharid)
        if voterid=="" and adharid=="":
            engine.say("please fill voter id  and adhar id")
            engine.runAndWait()
        else:
            print('inside else')
            embeddings.updateface(voterid,adharid)
            connection = mysql.connector.connect(host='localhost',
                                             database='fvoting',
                                             user='root',
                                             password='root')
            cursor = connection.cursor()
            cursor.execute("select * from voter where voterid='{}' and adharid='{}'".format(voterid,adharid))
            res = cursor.fetchall()
            if res==[]:
                cursor.execute("insert into voter(voterid,adharid,status)values('{}','{}','{}')".format(voterid,adharid,'not voted'))
                connection.commit()
                connection.close()
                engine.say("thank you. voter updated successfully")
                engine.runAndWait()
            else:
                engine.say("voter already exists")
                engine.runAndWait()
            


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
